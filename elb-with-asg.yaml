Parameters:
  VPC:
    Type: "String"
    Default: "vpc-b71e65d0"
  Subnets:
    Type: "CommaDelimitedList"
    Default: "subnet-a14554f9, subnet-f3aebfd9, subnet-71cf0f38, subnet-85e9f6b8"
  ASG1Size:
    Type: Number
    Default: 4
  ASG2Size:
    Type: Number
    Default: 4
  ASG1UpdateMechanism:
    Type: String
    AllowedValues:
      - "Rolling"
      - "Replace"
    Default: "Rolling"
  ASG2UpdateMechanism:
    Type: String
    AllowedValues:
      - "Rolling"
      - "Replace"
    Default: "Replace"
  BuildVer:
    Type: Number
    Default: 0

Conditions:
  IsASG1Rolling:
    Fn::Equals:
      - Ref: ASG1UpdateMechanism
      - "Rolling"
  IsASG2Rolling:
    Fn::Equals:
      - Ref: ASG2UpdateMechanism
      - "Rolling"

Resources:

  ELB:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      HealthCheck:
        Target: "HTTP:80/"
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      Subnets:
        Ref: "Subnets"
      SecurityGroups:
      - Ref: ELBSecurityGroup

  LC1:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd : []
          services:
            sysvinit:
              httpd:
                enabled: "true"
                ensureRunning: "true"
          commands:
            buildhtml:
              command: |
                echo "<HEAD><TITLE>Launch Config LC1</TITLE></HEAD>" > /var/www/html/index.html
                echo "<BODY><H1>Launch Config LC1</H1>" >> /var/www/html/index.html 
                echo `hostname` >> /var/www/html/index.html 
                echo "</BODY></HTML>" >> /var/www/html/index.html 
    Properties:
      KeyName: "acowellpaws"
      ImageId: "ami-c481fad3"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          yum update -y
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} \
                   --resource LC1 --region ${AWS::Region}

          # BuildVer ${BuildVer}

          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} \
                   --resource ASG1 --region ${AWS::Region}
          uptime
      InstanceType: "m3.medium"
      SecurityGroups:
      - Ref: "InstanceSecurityGroup"
      AssociatePublicIpAddress: "true"

  ASG1:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    CreationPolicy:
      ResourceSignal:
        Count: 
          Ref: "ASG1Size"
        Timeout: "PT5M"
    UpdatePolicy:
      Fn::If:
        - IsASG1Rolling
        - AutoScalingRollingUpdate:
            MinSuccessfulInstancesPercent: 100
        - AutoScalingReplacingUpdate:
            WillReplace: "true"
    Properties:
      LaunchConfigurationName:
        Ref: "LC1"
      MinSize: 
        Ref: "ASG1Size"
      MaxSize:
        Ref: "ASG1Size"
      LoadBalancerNames:
        - Ref: "ELB"
      VPCZoneIdentifier: 
        Ref: "Subnets"
      Tags:
        - Key: "Name"
          Value: "ASG1"
          PropagateAtLaunch: "true"

       
  LC2:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd : []
              ntp: []
          services:
            sysvinit:
              ntpd:
                enabled: "true"
                ensureRunning: "true"
              httpd:
                enabled: "true"
                ensureRunning: "true"
          commands:
            buildhtml:
              command: |
                echo "<HEAD><TITLE>Launch Config LC2</TITLE></HEAD>" > /var/www/html/index.html
                echo "<BODY><H1>Launch Config LC2</H1>" >> /var/www/html/index.html 
                echo `hostname` >> /var/www/html/index.html 
                echo v2 >> /var/www/html/index.html 
                echo "</BODY></HTML>" >> /var/www/html/index.html 
    Properties:
      KeyName: "acowellpaws"
      ImageId: "ami-c481fad3"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          yum update -y
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} \
                   --resource LC2 --region ${AWS::Region}

          # BuildVer ${BuildVer}

          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} \
                   --resource ASG2 --region ${AWS::Region}
      InstanceType: "m3.medium"
      SecurityGroups:
      - Ref: "InstanceSecurityGroup"
      AssociatePublicIpAddress: "true"

  ASG2:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    CreationPolicy:
      ResourceSignal:
        Count: 
          Ref: "ASG2Size"
        Timeout: "PT5M"
    UpdatePolicy:
      Fn::If:
        - IsASG2Rolling
        - AutoScalingRollingUpdate:
            MinSuccessfulInstancesPercent: 100
        - AutoScalingReplacingUpdate:
            WillReplace: "true"
    Properties:
      LaunchConfigurationName:
        Ref: "LC2"
      MinSize: 
        Ref: "ASG2Size"
      MaxSize:
        Ref: "ASG2Size"
      LoadBalancerNames:
        - Ref: "ELB"
      VPCZoneIdentifier: 
        Ref: "Subnets"
      Tags:
        - Key: "Name"
          Value: "ASG2"
          PropagateAtLaunch: "true"

       
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId:
        Ref: "VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '192.168.0.0/16'
         
    
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http ELB
      VpcId:
        Ref: "VPC"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0

         
    
